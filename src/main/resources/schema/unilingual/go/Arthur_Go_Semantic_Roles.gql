define

##########---------- Entities ----------##########

#####----- Go -----#####
GoSourceArtifact sub SourceArtifact;

ArrayTypeArtifact sub GoSourceArtifact,
	# Semantic
	plays ARGUMENT:IS_ARGUMENT,
	plays CALLEE:IS_CALLEE,
	plays ENTRY:IS_ENTRY,
	plays EXPRESSION:IS_EXPRESSION,
	plays KEY:IS_KEY,
	plays LIST:IS_LIST,
	plays POSITIONAL:IS_POSITIONAL,
	plays TYPE:IS_TYPE;

AssignStmtArtifact sub GoSourceArtifact,
	# Semantic
	plays ADD:IS_ADD,
	plays AND:IS_AND,
	plays ARITHMETIC:IS_ARITHMETIC,
	plays ASSIGNMENT:IS_ASSIGNMENT,
	plays BINARY:IS_BINARY,
	plays BITWISE:IS_BITWISE,
	plays DECLARATION:IS_DECLARATION,
	plays DIVIDE:IS_DIVIDE,
	plays FOR:IS_FOR,
	plays IF:IS_IF,
	plays INITIALIZATION:IS_INITIALIZATION,
	plays LEFT_SHIFT:IS_LEFT_SHIFT,
	plays MODULO:IS_MODULO,
	plays MULTIPLY:IS_MULTIPLY,
	plays NEGATIVE:IS_NEGATIVE,
	plays OPERATOR:IS_OPERATOR,
	plays OR:IS_OR,
	plays RIGHT_SHIFT:IS_RIGHT_SHIFT,
	plays STATEMENT:IS_STATEMENT,
	plays SUBSTRACT:IS_SUBSTRACT,
	plays SWITCH:IS_SWITCH,
	plays UPDATE:IS_UPDATE,
	plays XOR:IS_XOR;

BasicLitArtifact sub GoSourceArtifact,
	# Semantic
	plays ARGUMENT:IS_ARGUMENT,
	plays ASSIGNMENT:IS_ASSIGNMENT,
	plays BINARY:IS_BINARY,
	plays CALLEE:IS_CALLEE,
	plays CHARACTER:IS_CHARACTER,
	plays CONDITION:IS_CONDITION,
	plays EXPRESSION:IS_EXPRESSION,
	plays IF:IS_IF,
	plays IMPORT:IS_IMPORT,
	plays INCOMPLETE:IS_INCOMPLETE,
	plays KEY:IS_KEY,
	plays LEFT:IS_LEFT,
	plays LITERAL:IS_LITERAL,
	plays NUMBER:IS_NUMBER,
	plays PATHNAME:IS_PATHNAME,
	plays POSITIONAL:IS_POSITIONAL,
	plays PRIMITIVE:IS_PRIMITIVE,
	plays RIGHT:IS_RIGHT,
	plays STRING:IS_STRING,
	plays VALUE:IS_VALUE;

BinaryExprArtifact sub GoSourceArtifact,
	# Semantic
	plays ADD:IS_ADD,
	plays AND:IS_AND,
	plays ARGUMENT:IS_ARGUMENT,
	plays ARITHMETIC:IS_ARITHMETIC,
	plays ASSIGNMENT:IS_ASSIGNMENT,
	plays BINARY:IS_BINARY,
	plays BITWISE:IS_BITWISE,
	plays BOOLEAN:IS_BOOLEAN,
	plays CONDITION:IS_CONDITION,
	plays DIVIDE:IS_DIVIDE,
	plays EQUAL:IS_EQUAL,
	plays EXPRESSION:IS_EXPRESSION,
	plays FOR:IS_FOR,
	plays GREATER_THAN:IS_GREATER_THAN,
	plays GREATER_THAN_OR_EQUAL:IS_GREATER_THAN_OR_EQUAL,
	plays IF:IS_IF,
	plays KEY:IS_KEY,
	plays LEFT:IS_LEFT,
	plays LEFT_SHIFT:IS_LEFT_SHIFT,
	plays LESS_THAN:IS_LESS_THAN,
	plays LESS_THAN_OR_EQUAL:IS_LESS_THAN_OR_EQUAL,
	plays MODULO:IS_MODULO,
	plays MULTIPLY:IS_MULTIPLY,
	plays NEGATIVE:IS_NEGATIVE,
	plays NOT:IS_NOT,
	plays OR:IS_OR,
	plays POSITIONAL:IS_POSITIONAL,
	plays RELATIONAL:IS_RELATIONAL,
	plays RIGHT:IS_RIGHT,
	plays RIGHT_SHIFT:IS_RIGHT_SHIFT,
	plays SUBSTRACT:IS_SUBSTRACT,
	plays VALUE:IS_VALUE,
	plays XOR:IS_XOR;

BlockStmtArtifact sub GoSourceArtifact,
	# Semantic
	plays BLOCK:IS_BLOCK,
	plays BODY:IS_BODY,
	plays ELSE:IS_ELSE,
	plays FOR:IS_FOR,
	plays FUNCTION:IS_FUNCTION,
	plays SCOPE:IS_SCOPE,
	plays STATEMENT:IS_STATEMENT,
	plays SWITCH:IS_SWITCH,
	plays THEN:IS_THEN;

BranchStmtArtifact sub GoSourceArtifact,
	# Semantic
	plays BREAK:IS_BREAK,
	plays CONTINUE:IS_CONTINUE,
	plays GOTO:IS_GOTO,
	plays INCOMPLETE:IS_INCOMPLETE,
	plays STATEMENT:IS_STATEMENT;

CallExprArtifact sub GoSourceArtifact,
	# Semantic
	plays ARGUMENT:IS_ARGUMENT,
	plays ASSIGNMENT:IS_ASSIGNMENT,
	plays BINARY:IS_BINARY,
	plays CALL:IS_CALL,
	plays CALLEE:IS_CALLEE,
	plays CONDITION:IS_CONDITION,
	plays EXPRESSION:IS_EXPRESSION,
	plays FOR:IS_FOR,
	plays IF:IS_IF,
	plays KEY:IS_KEY,
	plays LEFT:IS_LEFT,
	plays POSITIONAL:IS_POSITIONAL,
	plays RIGHT:IS_RIGHT,
	plays VALUE:IS_VALUE;

CaseClauseArtifact sub GoSourceArtifact,
	# Semantic
	plays CASE:IS_CASE,
	plays STATEMENT:IS_STATEMENT;

ChanTypeArtifact sub GoSourceArtifact,
	# Semantic
	plays ARGUMENT:IS_ARGUMENT,
	plays CALLEE:IS_CALLEE,
	plays ENTRY:IS_ENTRY,
	plays EXPRESSION:IS_EXPRESSION,
	plays INCOMPLETE:IS_INCOMPLETE,
	plays KEY:IS_KEY,
	plays POSITIONAL:IS_POSITIONAL,
	plays TYPE:IS_TYPE;

CommClauseArtifact sub GoSourceArtifact,
	# Semantic
	plays CASE:IS_CASE,
	plays INCOMPLETE:IS_INCOMPLETE,
	plays STATEMENT:IS_STATEMENT;

CommentArtifact sub GoSourceArtifact,
	# Semantic
	plays COMMENT:IS_COMMENT;

CommentGroupArtifact sub GoSourceArtifact,
	# Semantic
	plays COMMENT:IS_COMMENT,
	plays LIST:IS_LIST;

CompositeLitArtifact sub GoSourceArtifact,
	# Semantic
	plays ARGUMENT:IS_ARGUMENT,
	plays ASSIGNMENT:IS_ASSIGNMENT,
	plays BINARY:IS_BINARY,
	plays EXPRESSION:IS_EXPRESSION,
	plays KEY:IS_KEY,
	plays LEFT:IS_LEFT,
	plays LITERAL:IS_LITERAL,
	plays POSITIONAL:IS_POSITIONAL,
	plays RIGHT:IS_RIGHT,
	plays VALUE:IS_VALUE;

DeclStmtArtifact sub GoSourceArtifact,
	# Semantic
	plays STATEMENT:IS_STATEMENT;

DeferStmtArtifact sub GoSourceArtifact,
	# Semantic
	plays INCOMPLETE:IS_INCOMPLETE,
	plays STATEMENT:IS_STATEMENT;

EllipsisArtifact sub GoSourceArtifact,
	# Semantic
	plays EXPRESSION:IS_EXPRESSION,
	plays TYPE:IS_TYPE;

EmptyStmtArtifact sub GoSourceArtifact,
	# Semantic
	plays UNANNOTATED:IS_UNANNOTATED;

ExprStmtArtifact sub GoSourceArtifact,
	# Semantic
	plays FOR:IS_FOR,
	plays IF:IS_IF,
	plays INITIALIZATION:IS_INITIALIZATION,
	plays STATEMENT:IS_STATEMENT,
	plays SWITCH:IS_SWITCH,
	plays UPDATE:IS_UPDATE;

FieldArtifact sub GoSourceArtifact,
	# Semantic
	plays ARGUMENT:IS_ARGUMENT,
	plays ENTRY:IS_ENTRY,
	plays FUNCTION:IS_FUNCTION,
	plays RECEIVER:IS_RECEIVER,
	plays RETURN:IS_RETURN,
	plays UNANNOTATED:IS_UNANNOTATED;

FieldListArtifact sub GoSourceArtifact,
	# Semantic
	plays ARGS_LIST:IS_ARGS_LIST,
	plays FUNCTION:IS_FUNCTION,
	plays INCOMPLETE:IS_INCOMPLETE,
	plays LIST:IS_LIST,
	plays RECEIVER:IS_RECEIVER,
	plays RETURN:IS_RETURN;

FileArtifact sub GoSourceArtifact,
	# Semantic
	plays FILE:IS_FILE;

ForStmtArtifact sub GoSourceArtifact,
	# Semantic
	plays FOR:IS_FOR,
	plays STATEMENT:IS_STATEMENT;

FuncDeclArtifact sub GoSourceArtifact,
	# Semantic
	plays DECLARATION:IS_DECLARATION,
	plays FUNCTION:IS_FUNCTION,
	plays UNANNOTATED:IS_UNANNOTATED;

FuncLitArtifact sub GoSourceArtifact,
	# Semantic
	plays ARGUMENT:IS_ARGUMENT,
	plays ASSIGNMENT:IS_ASSIGNMENT,
	plays BINARY:IS_BINARY,
	plays CALLEE:IS_CALLEE,
	plays EXPRESSION:IS_EXPRESSION,
	plays POSITIONAL:IS_POSITIONAL,
	plays RIGHT:IS_RIGHT,
	plays VALUE:IS_VALUE;

FuncTypeArtifact sub GoSourceArtifact,
	# Semantic
	plays ARGUMENT:IS_ARGUMENT,
	plays CALLEE:IS_CALLEE,
	plays ENTRY:IS_ENTRY,
	plays EXPRESSION:IS_EXPRESSION,
	plays FUNCTION:IS_FUNCTION,
	plays KEY:IS_KEY,
	plays POSITIONAL:IS_POSITIONAL,
	plays TYPE:IS_TYPE;

GenDeclArtifact sub GoSourceArtifact,
	# Semantic
	plays DECLARATION:IS_DECLARATION,
	plays INCOMPLETE:IS_INCOMPLETE,
	plays TYPE:IS_TYPE,
	plays VARIABLE:IS_VARIABLE;

GoStmtArtifact sub GoSourceArtifact,
	# Semantic
	plays INCOMPLETE:IS_INCOMPLETE,
	plays STATEMENT:IS_STATEMENT;

IdentArtifact sub GoSourceArtifact,
	# Semantic
	plays ALIAS:IS_ALIAS,
	plays ARGUMENT:IS_ARGUMENT,
	plays ASSIGNMENT:IS_ASSIGNMENT,
	plays BINARY:IS_BINARY,
	plays CALLEE:IS_CALLEE,
	plays CONDITION:IS_CONDITION,
	plays ENTRY:IS_ENTRY,
	plays EXPRESSION:IS_EXPRESSION,
	plays FOR:IS_FOR,
	plays FUNCTION:IS_FUNCTION,
	plays IDENTIFIER:IS_IDENTIFIER,
	plays IF:IS_IF,
	plays IMPORT:IS_IMPORT,
	plays ITERATOR:IS_ITERATOR,
	plays KEY:IS_KEY,
	plays LEFT:IS_LEFT,
	plays NAME:IS_NAME,
	plays POSITIONAL:IS_POSITIONAL,
	plays RECEIVER:IS_RECEIVER,
	plays RIGHT:IS_RIGHT,
	plays TYPE:IS_TYPE,
	plays VALUE:IS_VALUE,
	plays VARIABLE:IS_VARIABLE;

IfStmtArtifact sub GoSourceArtifact,
	# Semantic
	plays ELSE:IS_ELSE,
	plays IF:IS_IF,
	plays STATEMENT:IS_STATEMENT;

ImportSpecArtifact sub GoSourceArtifact,
	# Semantic
	plays DECLARATION:IS_DECLARATION,
	plays IMPORT:IS_IMPORT;

IncDecStmtArtifact sub GoSourceArtifact,
	# Semantic
	plays DECREMENT:IS_DECREMENT,
	plays FOR:IS_FOR,
	plays IF:IS_IF,
	plays INCREMENT:IS_INCREMENT,
	plays INITIALIZATION:IS_INITIALIZATION,
	plays STATEMENT:IS_STATEMENT,
	plays SWITCH:IS_SWITCH,
	plays UNARY:IS_UNARY,
	plays UPDATE:IS_UPDATE;

IndexExprArtifact sub GoSourceArtifact,
	# Semantic
	plays ARGUMENT:IS_ARGUMENT,
	plays ASSIGNMENT:IS_ASSIGNMENT,
	plays BINARY:IS_BINARY,
	plays CALLEE:IS_CALLEE,
	plays CONDITION:IS_CONDITION,
	plays EXPRESSION:IS_EXPRESSION,
	plays FOR:IS_FOR,
	plays IF:IS_IF,
	plays ITERATOR:IS_ITERATOR,
	plays KEY:IS_KEY,
	plays LEFT:IS_LEFT,
	plays POSITIONAL:IS_POSITIONAL,
	plays RIGHT:IS_RIGHT,
	plays VALUE:IS_VALUE;

InterfaceTypeArtifact sub GoSourceArtifact,
	# Semantic
	plays ARGUMENT:IS_ARGUMENT,
	plays CALLEE:IS_CALLEE,
	plays ENTRY:IS_ENTRY,
	plays EXPRESSION:IS_EXPRESSION,
	plays INCOMPLETE:IS_INCOMPLETE,
	plays KEY:IS_KEY,
	plays POSITIONAL:IS_POSITIONAL,
	plays TYPE:IS_TYPE;

KeyValueExprArtifact sub GoSourceArtifact,
	# Semantic
	plays EXPRESSION:IS_EXPRESSION;

LabeledStmtArtifact sub GoSourceArtifact,
	# Semantic
	plays STATEMENT:IS_STATEMENT;

MapTypeArtifact sub GoSourceArtifact,
	# Semantic
	plays ARGUMENT:IS_ARGUMENT,
	plays CALLEE:IS_CALLEE,
	plays ENTRY:IS_ENTRY,
	plays EXPRESSION:IS_EXPRESSION,
	plays KEY:IS_KEY,
	plays MAP:IS_MAP,
	plays POSITIONAL:IS_POSITIONAL,
	plays TYPE:IS_TYPE;

OperatorArtifact sub GoSourceArtifact,
	# Semantic
	plays ADD:IS_ADD,
	plays AND:IS_AND,
	plays ARITHMETIC:IS_ARITHMETIC,
	plays ASSIGNMENT:IS_ASSIGNMENT,
	plays BINARY:IS_BINARY,
	plays BITWISE:IS_BITWISE,
	plays BOOLEAN:IS_BOOLEAN,
	plays DECLARATION:IS_DECLARATION,
	plays DECREMENT:IS_DECREMENT,
	plays DIVIDE:IS_DIVIDE,
	plays EQUAL:IS_EQUAL,
	plays EXPRESSION:IS_EXPRESSION,
	plays GREATER_THAN:IS_GREATER_THAN,
	plays GREATER_THAN_OR_EQUAL:IS_GREATER_THAN_OR_EQUAL,
	plays INCOMPLETE:IS_INCOMPLETE,
	plays INCREMENT:IS_INCREMENT,
	plays LEFT_SHIFT:IS_LEFT_SHIFT,
	plays LESS_THAN:IS_LESS_THAN,
	plays LESS_THAN_OR_EQUAL:IS_LESS_THAN_OR_EQUAL,
	plays MODULO:IS_MODULO,
	plays MULTIPLY:IS_MULTIPLY,
	plays NEGATIVE:IS_NEGATIVE,
	plays NOT:IS_NOT,
	plays OPERATOR:IS_OPERATOR,
	plays OR:IS_OR,
	plays POSITIVE:IS_POSITIVE,
	plays RELATIONAL:IS_RELATIONAL,
	plays RIGHT_SHIFT:IS_RIGHT_SHIFT,
	plays SUBSTRACT:IS_SUBSTRACT,
	plays TAKE_ADDRESS:IS_TAKE_ADDRESS,
	plays UNARY:IS_UNARY,
	plays XOR:IS_XOR;

ParenExprArtifact sub GoSourceArtifact,
	# Semantic
	plays ARGUMENT:IS_ARGUMENT,
	plays ASSIGNMENT:IS_ASSIGNMENT,
	plays BINARY:IS_BINARY,
	plays CALLEE:IS_CALLEE,
	plays CONDITION:IS_CONDITION,
	plays ENTRY:IS_ENTRY,
	plays EXPRESSION:IS_EXPRESSION,
	plays IF:IS_IF,
	plays INCOMPLETE:IS_INCOMPLETE,
	plays KEY:IS_KEY,
	plays LEFT:IS_LEFT,
	plays POSITIONAL:IS_POSITIONAL,
	plays RIGHT:IS_RIGHT,
	plays TYPE:IS_TYPE,
	plays VALUE:IS_VALUE;

PositionArtifact sub GoSourceArtifact;

RangeStmtArtifact sub GoSourceArtifact,
	# Semantic
	plays FOR:IS_FOR,
	plays ITERATOR:IS_ITERATOR,
	plays STATEMENT:IS_STATEMENT;

ReturnStmtArtifact sub GoSourceArtifact,
	# Semantic
	plays RETURN:IS_RETURN,
	plays STATEMENT:IS_STATEMENT;

SelectorExprArtifact sub GoSourceArtifact,
	# Semantic
	plays ARGUMENT:IS_ARGUMENT,
	plays ASSIGNMENT:IS_ASSIGNMENT,
	plays BINARY:IS_BINARY,
	plays CALLEE:IS_CALLEE,
	plays CONDITION:IS_CONDITION,
	plays ENTRY:IS_ENTRY,
	plays EXPRESSION:IS_EXPRESSION,
	plays FOR:IS_FOR,
	plays IF:IS_IF,
	plays INCOMPLETE:IS_INCOMPLETE,
	plays ITERATOR:IS_ITERATOR,
	plays KEY:IS_KEY,
	plays LEFT:IS_LEFT,
	plays POSITIONAL:IS_POSITIONAL,
	plays QUALIFIED:IS_QUALIFIED,
	plays RIGHT:IS_RIGHT,
	plays TYPE:IS_TYPE,
	plays VALUE:IS_VALUE;

SelectStmtArtifact sub GoSourceArtifact,
	# Semantic
	plays INCOMPLETE:IS_INCOMPLETE,
	plays STATEMENT:IS_STATEMENT,
	plays SWITCH:IS_SWITCH;

SendStmtArtifact sub GoSourceArtifact,
	# Semantic
	plays FOR:IS_FOR,
	plays INCOMPLETE:IS_INCOMPLETE,
	plays STATEMENT:IS_STATEMENT,
	plays UPDATE:IS_UPDATE;

SliceExprArtifact sub GoSourceArtifact,
	# Semantic
	plays ARGUMENT:IS_ARGUMENT,
	plays ASSIGNMENT:IS_ASSIGNMENT,
	plays BINARY:IS_BINARY,
	plays EXPRESSION:IS_EXPRESSION,
	plays LEFT:IS_LEFT,
	plays POSITIONAL:IS_POSITIONAL,
	plays RIGHT:IS_RIGHT,
	plays VALUE:IS_VALUE;

StarExprArtifact sub GoSourceArtifact,
	# Semantic
	plays ARGUMENT:IS_ARGUMENT,
	plays ASSIGNMENT:IS_ASSIGNMENT,
	plays BINARY:IS_BINARY,
	plays CONDITION:IS_CONDITION,
	plays ENTRY:IS_ENTRY,
	plays EXPRESSION:IS_EXPRESSION,
	plays FOR:IS_FOR,
	plays FUNCTION:IS_FUNCTION,
	plays IF:IS_IF,
	plays ITERATOR:IS_ITERATOR,
	plays KEY:IS_KEY,
	plays LEFT:IS_LEFT,
	plays POSITIONAL:IS_POSITIONAL,
	plays RECEIVER:IS_RECEIVER,
	plays RIGHT:IS_RIGHT,
	plays TYPE:IS_TYPE,
	plays VALUE:IS_VALUE;

StructTypeArtifact sub GoSourceArtifact,
	# Semantic
	plays ARGUMENT:IS_ARGUMENT,
	plays CALLEE:IS_CALLEE,
	plays ENTRY:IS_ENTRY,
	plays EXPRESSION:IS_EXPRESSION,
	plays KEY:IS_KEY,
	plays POSITIONAL:IS_POSITIONAL,
	plays TYPE:IS_TYPE;

SwitchStmtArtifact sub GoSourceArtifact,
	# Semantic
	plays STATEMENT:IS_STATEMENT,
	plays SWITCH:IS_SWITCH;

TypeAssertExprArtifact sub GoSourceArtifact,
	# Semantic
	plays ARGUMENT:IS_ARGUMENT,
	plays ASSIGNMENT:IS_ASSIGNMENT,
	plays BINARY:IS_BINARY,
	plays CALLEE:IS_CALLEE,
	plays CONDITION:IS_CONDITION,
	plays EXPRESSION:IS_EXPRESSION,
	plays IF:IS_IF,
	plays INCOMPLETE:IS_INCOMPLETE,
	plays LEFT:IS_LEFT,
	plays POSITIONAL:IS_POSITIONAL,
	plays RIGHT:IS_RIGHT,
	plays VALUE:IS_VALUE;

TypeSpecArtifact sub GoSourceArtifact,
	# Semantic
	plays DECLARATION:IS_DECLARATION;

TypeSwitchStmtArtifact sub GoSourceArtifact,
	# Semantic
	plays INCOMPLETE:IS_INCOMPLETE,
	plays STATEMENT:IS_STATEMENT,
	plays SWITCH:IS_SWITCH;

UnaryExprArtifact sub GoSourceArtifact,
	# Semantic
	plays ARGUMENT:IS_ARGUMENT,
	plays ARITHMETIC:IS_ARITHMETIC,
	plays ASSIGNMENT:IS_ASSIGNMENT,
	plays BINARY:IS_BINARY,
	plays BITWISE:IS_BITWISE,
	plays BOOLEAN:IS_BOOLEAN,
	plays CONDITION:IS_CONDITION,
	plays EXPRESSION:IS_EXPRESSION,
	plays FOR:IS_FOR,
	plays IF:IS_IF,
	plays INCOMPLETE:IS_INCOMPLETE,
	plays KEY:IS_KEY,
	plays LEFT:IS_LEFT,
	plays NEGATIVE:IS_NEGATIVE,
	plays POSITIONAL:IS_POSITIONAL,
	plays POSITIVE:IS_POSITIVE,
	plays RIGHT:IS_RIGHT,
	plays TAKE_ADDRESS:IS_TAKE_ADDRESS,
	plays UNARY:IS_UNARY,
	plays VALUE:IS_VALUE;

ValueSpecArtifact sub GoSourceArtifact,
	# Semantic
	plays DECLARATION:IS_DECLARATION;

##########---------- Semantic Roles ----------##########
ADD sub relation,
	relates IS_ADD;

ALIAS sub relation,
	relates IS_ALIAS;

AND sub relation,
	relates IS_AND;

ARGS_LIST sub relation,
	relates IS_ARGS_LIST;

ARGUMENT sub relation,
	relates IS_ARGUMENT;

ARITHMETIC sub relation,
	relates IS_ARITHMETIC;

ASSIGNMENT sub relation,
	relates IS_ASSIGNMENT;

BINARY sub relation,
	relates IS_BINARY;

BITWISE sub relation,
	relates IS_BITWISE;

BLOCK sub relation,
	relates IS_BLOCK;

BODY sub relation,
	relates IS_BODY;

BOOLEAN sub relation,
	relates IS_BOOLEAN;

BREAK sub relation,
	relates IS_BREAK;

CALL sub relation,
	relates IS_CALL;

CALLEE sub relation,
	relates IS_CALLEE;

CASE sub relation,
	relates IS_CASE;

CHARACTER sub relation,
	relates IS_CHARACTER;

COMMENT sub relation,
	relates IS_COMMENT;

CONDITION sub relation,
	relates IS_CONDITION;

CONTINUE sub relation,
	relates IS_CONTINUE;

DECLARATION sub relation,
	relates IS_DECLARATION;

DECREMENT sub relation,
	relates IS_DECREMENT;

DIVIDE sub relation,
	relates IS_DIVIDE;

ELSE sub relation,
	relates IS_ELSE;

ENTRY sub relation,
	relates IS_ENTRY;

EQUAL sub relation,
	relates IS_EQUAL;

EXPRESSION sub relation,
	relates IS_EXPRESSION;

FILE sub relation,
	relates IS_FILE;

FOR sub relation,
	relates IS_FOR;

FUNCTION sub relation,
	relates IS_FUNCTION;

GOTO sub relation,
	relates IS_GOTO;

GREATER_THAN sub relation,
	relates IS_GREATER_THAN;

GREATER_THAN_OR_EQUAL sub relation,
	relates IS_GREATER_THAN_OR_EQUAL;

IDENTIFIER sub relation,
	relates IS_IDENTIFIER;

IF sub relation,
	relates IS_IF;

IMPORT sub relation,
	relates IS_IMPORT;

INCOMPLETE sub relation,
	relates IS_INCOMPLETE;

INCREMENT sub relation,
	relates IS_INCREMENT;

INITIALIZATION sub relation,
	relates IS_INITIALIZATION;

ITERATOR sub relation,
	relates IS_ITERATOR;

KEY sub relation,
	relates IS_KEY;

LEFT sub relation,
	relates IS_LEFT;

LEFT_SHIFT sub relation,
	relates IS_LEFT_SHIFT;

LESS_THAN sub relation,
	relates IS_LESS_THAN;

LESS_THAN_OR_EQUAL sub relation,
	relates IS_LESS_THAN_OR_EQUAL;

LIST sub relation,
	relates IS_LIST;

LITERAL sub relation,
	relates IS_LITERAL;

MAP sub relation,
	relates IS_MAP;

MODULO sub relation,
	relates IS_MODULO;

MULTIPLY sub relation,
	relates IS_MULTIPLY;

NAME sub relation,
	relates IS_NAME;

NEGATIVE sub relation,
	relates IS_NEGATIVE;

NOT sub relation,
	relates IS_NOT;

NUMBER sub relation,
	relates IS_NUMBER;

OPERATOR sub relation,
	relates IS_OPERATOR;

OR sub relation,
	relates IS_OR;

PATHNAME sub relation,
	relates IS_PATHNAME;

POSITIONAL sub relation,
	relates IS_POSITIONAL;

POSITIVE sub relation,
	relates IS_POSITIVE;

PRIMITIVE sub relation,
	relates IS_PRIMITIVE;

QUALIFIED sub relation,
	relates IS_QUALIFIED;

RECEIVER sub relation,
	relates IS_RECEIVER;

RELATIONAL sub relation,
	relates IS_RELATIONAL;

RETURN sub relation,
	relates IS_RETURN;

RIGHT sub relation,
	relates IS_RIGHT;

RIGHT_SHIFT sub relation,
	relates IS_RIGHT_SHIFT;

SCOPE sub relation,
	relates IS_SCOPE;

STATEMENT sub relation,
	relates IS_STATEMENT;

STRING sub relation,
	relates IS_STRING;

SUBSTRACT sub relation,
	relates IS_SUBSTRACT;

SWITCH sub relation,
	relates IS_SWITCH;

TAKE_ADDRESS sub relation,
	relates IS_TAKE_ADDRESS;

THEN sub relation,
	relates IS_THEN;

TYPE sub relation,
	relates IS_TYPE;

UNANNOTATED sub relation,
	relates IS_UNANNOTATED;

UNARY sub relation,
	relates IS_UNARY;

UPDATE sub relation,
	relates IS_UPDATE;

VALUE sub relation,
	relates IS_VALUE;

VARIABLE sub relation,
	relates IS_VARIABLE;

XOR sub relation,
	relates IS_XOR;
